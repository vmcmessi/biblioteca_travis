package view;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Exemplar;

/**
 *
 * @author Victor
 */
public class Devolver extends javax.swing.JDialog {

    /**
     * Creates new form fazerDevolucao
     * @param parent
     * @param modal
     */
    public Devolver(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setResizable(false);
        
        combObras.removeAllItems();
        combObras.addItem("Selecione o exemplar");
        
        for (Exemplar obra : Main.getInstance().getBiblioteca().listarObrasEmEmprestimo()) {
            combObras.addItem(obra.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDescricaoTela = new javax.swing.JLabel();
        lblObra = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        combObras = new javax.swing.JComboBox();
        lblValor = new javax.swing.JLabel();
        txbValor = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblDescricaoTela.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblDescricaoTela.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDescricaoTela.setText("Realizar Devolução");

        lblObra.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblObra.setText("Exemplar:");

        btnConfirmar.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        combObras.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        combObras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combObrasActionPerformed(evt);
            }
        });

        lblValor.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblValor.setText("Valor:");

        txbValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        txbValor.setEnabled(false);
        txbValor.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObra)
                            .addComponent(lblValor))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txbValor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConfirmar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(combObras, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(lblDescricaoTela))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblDescricaoTela, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObra)
                    .addComponent(combObras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(txbValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combObrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combObrasActionPerformed
        int obraSelecionada = combObras.getSelectedIndex();
        double valor = 0.0;
        
        if(obraSelecionada > 0)
        {
            try {
                Exemplar obra  =  Main.getInstance().getBiblioteca().listarObrasEmEmprestimo().get(obraSelecionada-1);
                valor = Main.getInstance().getBiblioteca().calcularValorEmprestimo(obra);
            } catch (Exception ex) {
                Logger.getLogger(Devolver.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        txbValor.setText(String.valueOf(valor));
    }//GEN-LAST:event_combObrasActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        int obraSelecionada = combObras.getSelectedIndex();
        
        if(obraSelecionada == 0) {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos");
        } else {
            Exemplar obra  =  Main.getInstance().getBiblioteca().listarObrasEmEmprestimo().get(obraSelecionada-1);
            try {
                Main.getInstance().getBiblioteca().devolver(obra);
                JOptionPane.showMessageDialog(null, "Devolução realizada");
            } catch (Exception ex) {
                Logger.getLogger(Emprestar.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Erro ao devolver exemplar: "+ obra.getNome());
            }
        }
        //atualiza a listagem de obras
        combObras.removeAllItems();
        combObras.addItem("Selecione o exemplar");
        
        for (Exemplar obra : Main.getInstance().getBiblioteca().listarObrasEmEmprestimo()) {
            combObras.addItem(obra.getNome());
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Devolver dialog = new Devolver(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JComboBox combObras;
    private javax.swing.JLabel lblDescricaoTela;
    private javax.swing.JLabel lblObra;
    private javax.swing.JLabel lblValor;
    private javax.swing.JFormattedTextField txbValor;
    // End of variables declaration//GEN-END:variables
}